{"version":3,"file":"angular-split.js.map","sources":["ng://angular-split/lib/utils.ts","ng://angular-split/lib/component/split.component.ts","ng://angular-split/lib/directive/splitArea.directive.ts","ng://angular-split/lib/service/UndetectedEventPlugin.ts","ng://angular-split/lib/module.ts"],"sourcesContent":["import { ElementRef } from '@angular/core';\r\n\r\nimport { IPoint } from './interface/IPoint';\r\n\r\n\r\nexport function getPointFromEvent(event: MouseEvent | TouchEvent): IPoint {\r\n    // TouchEvent\r\n    if((<TouchEvent> event).touches !== undefined && (<TouchEvent> event).touches.length > 0) {\r\n        return {\r\n            x: (<TouchEvent> event).touches[0].clientX,\r\n            y: (<TouchEvent> event).touches[0].clientY,\r\n        };\r\n    }\r\n    // MouseEvent\r\n    else if((<MouseEvent> event).clientX !== undefined && (<MouseEvent> event).clientY !== undefined) {\r\n        return {\r\n            x: (<MouseEvent> event).clientX,\r\n            y: (<MouseEvent> event).clientY,\r\n        };\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function getPixelSize(elRef: ElementRef, direction: 'horizontal' | 'vertical'): number {\r\n    return elRef.nativeElement[(direction === 'horizontal') ? 'offsetWidth' : 'offsetHeight'];\r\n\r\n}\r\n\r\nexport function getInputBoolean(v: any) {\r\n    return (typeof(v) === 'boolean') ? v : (v === 'false' ? false : true);\r\n}\r\n\r\nexport function isValidTotalSize(total: number): boolean {\r\n    return total > .999 && total < 1.001;\r\n}","import { Component, Input, Output, ChangeDetectionStrategy, ChangeDetectorRef, Renderer2, AfterViewInit, OnDestroy, ElementRef, NgZone, ViewChildren, QueryList } from '@angular/core';\r\nimport { Observable, Subscriber, Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { IArea } from '../interface/IArea';\r\nimport { IPoint } from '../interface/IPoint';\r\nimport { SplitAreaDirective } from '../directive/splitArea.directive';\r\nimport { getPointFromEvent, getPixelSize, getInputBoolean, isValidTotalSize } from '../utils';\r\n\r\n/**\r\n * angular-split\r\n * \r\n * Areas size are set in percentage of the split container.\r\n * Gutters size are set in pixels.\r\n * \r\n * So we set css 'flex-basis' property like this (where 0 <= area.size <= 1): \r\n *  calc( { area.size * 100 }% - { area.size * nbGutter * gutterSize }px );\r\n * \r\n * Examples with 3 visible areas and 2 gutters: \r\n * \r\n * |                     10px                   10px                                  |\r\n * |---------------------[]---------------------[]------------------------------------|\r\n * |  calc(20% - 4px)          calc(20% - 4px)              calc(60% - 12px)          |\r\n * \r\n * \r\n * |                          10px                        10px                        |\r\n * |--------------------------[]--------------------------[]--------------------------|\r\n * |  calc(33.33% - 6.667px)      calc(33.33% - 6.667px)      calc(33.33% - 6.667px)  |\r\n * \r\n * \r\n * |10px                                                  10px                        |\r\n * |[]----------------------------------------------------[]--------------------------|\r\n * |0                 calc(66.66% - 13.333px)                  calc(33%% - 6.667px)   |\r\n * \r\n * \r\n *  10px 10px                                                                         |\r\n * |[][]------------------------------------------------------------------------------|\r\n * |0 0                               calc(100% - 20px)                               |\r\n * \r\n */\r\n\r\n@Component({\r\n    selector: 'as-split',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    styleUrls: [`./split.component.scss`],\r\n    template: `\r\n        <ng-content></ng-content>\r\n        <ng-template ngFor [ngForOf]=\"displayedAreas\" let-index=\"index\" let-last=\"last\">\r\n            <div *ngIf=\"last === false\" \r\n                 #gutterEls\r\n                 class=\"as-split-gutter\"\r\n                 [style.flex-basis.px]=\"gutterSize\"\r\n                 [style.order]=\"index*2+1\"\r\n                 (as-split-undetected.click)=\"clickGutter($event, index+1)\"\r\n                 (as-split-undetected.mousedown)=\"startDragging($event, index*2+1, index+1)\"\r\n                 (as-split-undetected.touchstart)=\"startDragging($event, index*2+1, index+1)\">\r\n                <div class=\"as-split-gutter-icon\"></div>\r\n            </div>\r\n        </ng-template>`,\r\n})\r\nexport class SplitComponent implements AfterViewInit, OnDestroy {\r\n\r\n    private _direction: 'horizontal' | 'vertical' = 'horizontal';\r\n\r\n    @Input() set direction(v: 'horizontal' | 'vertical') {\r\n        this._direction = (v === 'vertical') ? 'vertical' : 'horizontal';\r\n        \r\n        this.renderer.addClass(this.elRef.nativeElement, `is-${ this._direction }`);\r\n        this.renderer.removeClass(this.elRef.nativeElement, `is-${ (this._direction === 'vertical') ? 'horizontal' : 'vertical' }`);\r\n        \r\n        this.build(false, false);\r\n    }\r\n    \r\n    get direction(): 'horizontal' | 'vertical' {\r\n        return this._direction;\r\n    }\r\n    \r\n    ////\r\n\r\n    private _gutterSize: number = 11;\r\n\r\n    @Input() set gutterSize(v: number) {\r\n        v = Number(v);\r\n        this._gutterSize = (!isNaN(v) && v > 0) ? v : 11;\r\n\r\n        this.build(false, false);\r\n    }\r\n    \r\n    get gutterSize(): number {\r\n        return this._gutterSize;\r\n    }\r\n    \r\n    ////\r\n\r\n    private _useTransition: boolean = false;\r\n\r\n    @Input() set useTransition(v: boolean) {\r\n        this._useTransition = getInputBoolean(v);\r\n\r\n        if(this._useTransition) this.renderer.addClass(this.elRef.nativeElement, 'is-transition');\r\n        else                    this.renderer.removeClass(this.elRef.nativeElement, 'is-transition');\r\n    }\r\n    \r\n    get useTransition(): boolean {\r\n        return this._useTransition;\r\n    }\r\n    \r\n    ////\r\n\r\n    private _disabled: boolean = false;\r\n    \r\n    @Input() set disabled(v: boolean) {\r\n        this._disabled = getInputBoolean(v);\r\n\r\n        if(this._disabled)  this.renderer.addClass(this.elRef.nativeElement, 'is-disabled');\r\n        else                this.renderer.removeClass(this.elRef.nativeElement, 'is-disabled');\r\n    }\r\n    \r\n    get disabled(): boolean {\r\n        return this._disabled;\r\n    }\r\n\r\n    ////\r\n\r\n    private _dir: 'ltr' | 'rtl' = 'ltr';\r\n    \r\n    @Input() set dir(v: 'ltr' | 'rtl') {\r\n        v = (v === 'rtl') ? 'rtl' : 'ltr';\r\n        this._dir = v;\r\n        \r\n        this.renderer.setAttribute(this.elRef.nativeElement, 'dir', this._dir);\r\n    }\r\n    \r\n    get dir(): 'ltr' | 'rtl' {\r\n        return this._dir;\r\n    }\r\n\r\n    ////\r\n\r\n    private dragStartSubscriber: Subscriber<{gutterNum: number, sizes: Array<number>}>\r\n    @Output() get dragStart(): Observable<{gutterNum: number, sizes: Array<number>}> {\r\n        return new Observable(subscriber => this.dragStartSubscriber = subscriber);\r\n    }\r\n\r\n    private dragEndSubscriber: Subscriber<{gutterNum: number, sizes: Array<number>}>\r\n    @Output() get dragEnd(): Observable<{gutterNum: number, sizes: Array<number>}> {\r\n        return new Observable(subscriber => this.dragEndSubscriber = subscriber);\r\n    }\r\n\r\n    private gutterClickSubscriber: Subscriber<{gutterNum: number, sizes: Array<number>}>\r\n    @Output() get gutterClick(): Observable<{gutterNum: number, sizes: Array<number>}> {\r\n        return new Observable(subscriber => this.gutterClickSubscriber = subscriber);\r\n    }\r\n\r\n    private transitionEndSubscriber: Subscriber<Array<number>>\r\n    @Output() get transitionEnd(): Observable<Array<number>> {\r\n        return new Observable(subscriber => this.transitionEndSubscriber = subscriber).pipe(\r\n            debounceTime<Array<number>>(20)\r\n        );\r\n    }\r\n    \r\n    private dragProgressSubject: Subject<{gutterNum: number, sizes: Array<number>}> = new Subject();\r\n    dragProgress$: Observable<{gutterNum: number, sizes: Array<number>}> = this.dragProgressSubject.asObservable();\r\n\r\n    ////\r\n\r\n    private isDragging: boolean = false;\r\n    private currentGutterNum: number = 0;\r\n    private startPoint: IPoint | null = null;\r\n    private endPoint: IPoint | null = null;\r\n\r\n    public readonly displayedAreas: Array<IArea> = [];\r\n    private readonly hidedAreas: Array<IArea> = [];\r\n    \r\n    private readonly dragListeners: Array<Function> = [];\r\n    private readonly dragStartValues = {\r\n        sizePixelContainer: 0,\r\n        sizePixelA: 0,\r\n        sizePixelB: 0,\r\n        sizePercentA: 0,\r\n        sizePercentB: 0,\r\n    };\r\n\r\n    @ViewChildren('gutterEls') private gutterEls: QueryList<ElementRef>;\r\n\r\n    constructor(private ngZone: NgZone,\r\n                private elRef: ElementRef,\r\n                private cdRef: ChangeDetectorRef,\r\n                private renderer: Renderer2) {\r\n        // To force adding default class, could be override by user @Input() or not\r\n        this.direction = this._direction;\r\n    }\r\n\r\n    public ngAfterViewInit() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            // To avoid transition at first rendering\r\n            setTimeout(() => this.renderer.addClass(this.elRef.nativeElement, 'is-init'));\r\n        });\r\n    }\r\n    \r\n    private getNbGutters(): number {\r\n        return (this.displayedAreas.length === 0) ? 0 : this.displayedAreas.length - 1;\r\n    }\r\n\r\n    public addArea(component: SplitAreaDirective): void {\r\n        const newArea: IArea = {\r\n            component, \r\n            order: 0, \r\n            size: 0,\r\n        };\r\n\r\n        if(component.visible === true) {\r\n            this.displayedAreas.push(newArea);\r\n\r\n            this.build(true, true);\r\n        }\r\n        else {\r\n            this.hidedAreas.push(newArea);\r\n        }\r\n    }\r\n\r\n    public removeArea(component: SplitAreaDirective): void {\r\n        if(this.displayedAreas.some(a => a.component === component)) {\r\n            const area = this.displayedAreas.find(a => a.component === component);\r\n            this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1);\r\n\r\n            this.build(true, true);\r\n        }\r\n        else if(this.hidedAreas.some(a => a.component === component)) {\r\n            const area = this.hidedAreas.find(a => a.component === component);\r\n            this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1);\r\n        }\r\n    }\r\n\r\n    public updateArea(component: SplitAreaDirective, resetOrders: boolean, resetSizes: boolean): void {\r\n        // Only refresh if area is displayed (No need to check inside 'hidedAreas')\r\n        const area = this.displayedAreas.find(a => a.component === component);\r\n        if(!area) {\r\n            return;\r\n        }\r\n\r\n        this.build(resetOrders, resetSizes);\r\n    }\r\n\r\n    public showArea(component: SplitAreaDirective): void {\r\n        const area = this.hidedAreas.find(a => a.component === component);\r\n        if(!area) {\r\n            return;\r\n        }\r\n\r\n        const areas = this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1);\r\n        this.displayedAreas.push(...areas);\r\n\r\n        this.build(true, true);\r\n    }\r\n\r\n    public hideArea(comp: SplitAreaDirective): void {\r\n        const area = this.displayedAreas.find(a => a.component === comp);\r\n        if(!area) {\r\n            return;\r\n        }\r\n\r\n        const areas = this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1);\r\n        areas.forEach(area => {\r\n            area.order = 0;\r\n            area.size = 0;\r\n        })\r\n        this.hidedAreas.push(...areas);\r\n\r\n        this.build(true, true);\r\n    }\r\n\r\n    public getVisibleAreaSizes(): Array<number> {\r\n        return this.displayedAreas.map(a => a.size * 100);\r\n    }\r\n\r\n    public setVisibleAreaSizes(sizes: Array<number>): boolean {\r\n        if(sizes.length !== this.displayedAreas.length) {\r\n            return false;\r\n        }\r\n\r\n        sizes = sizes.map(s => s / 100);\r\n\r\n        const total = sizes.reduce((total: number, v: number) => total + v, 0);\r\n        if(!isValidTotalSize(total)) {\r\n            return false;\r\n        }\r\n\r\n        this.displayedAreas.forEach((area, i) => {\r\n            // @ts-ignore\r\n            area.component._size = sizes[i];\r\n        })\r\n\r\n        this.build(false, true);\r\n        return true;\r\n    }\r\n\r\n    private build(resetOrders: boolean, resetSizes: boolean): void {\r\n        this.stopDragging();\r\n\r\n        // Â¤ AREAS ORDER\r\n        \r\n        if(resetOrders === true) {\r\n\r\n            // If user provided 'order' for each area, use it to sort them.\r\n            if(this.displayedAreas.every(a => a.component.order !== null)) {\r\n                this.displayedAreas.sort((a, b) => (<number> a.component.order) - (<number> b.component.order));\r\n            }\r\n    \r\n            // Then set real order with multiples of 2, numbers between will be used by gutters.\r\n            this.displayedAreas.forEach((area, i) => {\r\n                area.order = i * 2;\r\n                area.component.setStyleOrder(area.order);\r\n            });\r\n\r\n        }\r\n\r\n        // Â¤ AREAS SIZE PERCENT\r\n        \r\n        if(resetSizes === true) {\r\n\r\n            const totalUserSize = <number> this.displayedAreas.reduce((total: number, s: IArea) => s.component.size ? total + s.component.size : total, 0);\r\n            \r\n            // If user provided 'size' for each area and total == 1, use it.\r\n            if(this.displayedAreas.every(a => a.component.size !== null) && isValidTotalSize(totalUserSize) ) {\r\n\r\n                this.displayedAreas.forEach(area => {\r\n                    area.size = <number> area.component.size;\r\n                });\r\n            }\r\n            // Else set equal sizes for all areas.\r\n            else {\r\n                const size = 1 / this.displayedAreas.length;\r\n                \r\n                this.displayedAreas.forEach(area => {\r\n                    area.size = size;\r\n                });\r\n            }\r\n        }\r\n        \r\n        // Â¤ \r\n        // If some real area sizes are less than gutterSize, \r\n        // set them to zero and dispatch size to others.\r\n\r\n        let percentToDispatch = 0;\r\n        \r\n        // Get container pixel size\r\n        const containerSizePixel = getPixelSize(this.elRef, this.direction);\r\n\r\n        this.displayedAreas.forEach(area => {\r\n            if(area.size * containerSizePixel < this.gutterSize) {\r\n                percentToDispatch += area.size;\r\n                area.size = 0;\r\n            }\r\n        });\r\n        \r\n        if(percentToDispatch > 0 && this.displayedAreas.length > 0) {\r\n            const nbAreasNotZero = this.displayedAreas.filter(a => a.size !== 0).length;\r\n\r\n            if(nbAreasNotZero > 0) {\r\n                const percentToAdd = percentToDispatch / nbAreasNotZero;\r\n    \r\n                this.displayedAreas.filter(a => a.size !== 0).forEach(area => {\r\n                    area.size += percentToAdd;\r\n                });\r\n            }\r\n            // All area sizes (container percentage) are less than guterSize,\r\n            // It means containerSize < ngGutters * gutterSize\r\n            else {\r\n                this.displayedAreas[this.displayedAreas.length - 1].size = 1;\r\n            }\r\n        }\r\n\r\n        this.refreshStyleSizes();\r\n        this.cdRef.markForCheck();\r\n    }\r\n\r\n    private refreshStyleSizes(): void {\r\n        const sumGutterSize = this.getNbGutters() * this.gutterSize;\r\n\r\n        this.displayedAreas.forEach(area => {\r\n            area.component.setStyleFlexbasis(`calc( ${ area.size * 100 }% - ${ area.size * sumGutterSize }px )`);\r\n        });\r\n    }\r\n\r\n    public clickGutter(event: MouseEvent, gutterNum: number): void {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        if(this.startPoint && this.startPoint.x === event.clientX && this.startPoint.y === event.clientY) {\r\n            this.currentGutterNum = gutterNum;\r\n\r\n            this.notify('click');\r\n        }\r\n    }\r\n\r\n    public startDragging(event: MouseEvent | TouchEvent, gutterOrder: number, gutterNum: number): void {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        this.startPoint = getPointFromEvent(event);\r\n        if(!this.startPoint || this.disabled) {\r\n            return;\r\n        }\r\n\r\n        const areaA = this.displayedAreas.find(a => a.order === gutterOrder - 1);\r\n        const areaB = this.displayedAreas.find(a => a.order === gutterOrder + 1);\r\n        \r\n        if(!areaA || !areaB) {\r\n            return;\r\n        }\r\n\r\n        this.dragStartValues.sizePixelContainer = getPixelSize(this.elRef, this.direction);\r\n        this.dragStartValues.sizePixelA = getPixelSize(areaA.component.elRef, this.direction);\r\n        this.dragStartValues.sizePixelB = getPixelSize(areaB.component.elRef, this.direction);\r\n        this.dragStartValues.sizePercentA = areaA.size;\r\n        this.dragStartValues.sizePercentB = areaB.size;\r\n        this.currentGutterNum = gutterNum;\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.dragListeners.push( this.renderer.listen('document', 'mouseup', this.stopDragging.bind(this)) );\r\n            this.dragListeners.push( this.renderer.listen('document', 'touchend', this.stopDragging.bind(this)) );\r\n            this.dragListeners.push( this.renderer.listen('document', 'touchcancel', this.stopDragging.bind(this)) );\r\n            \r\n            this.dragListeners.push( this.renderer.listen('document', 'mousemove', (e: MouseEvent) => this.dragEvent(e, areaA, areaB)) );\r\n            this.dragListeners.push( this.renderer.listen('document', 'touchmove', (e: TouchEvent) => this.dragEvent(e, areaA, areaB)) );\r\n        });\r\n\r\n        areaA.component.lockEvents();\r\n        areaB.component.lockEvents();\r\n\r\n        this.isDragging = true;\r\n        this.renderer.addClass(this.elRef.nativeElement, 'is-dragging');\r\n        this.renderer.addClass(this.gutterEls.toArray()[this.currentGutterNum-1].nativeElement, 'is-dragged');\r\n        \r\n        this.notify('start');\r\n    }\r\n\r\n    private dragEvent(event: MouseEvent | TouchEvent, areaA: IArea, areaB: IArea): void {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        if(!this.isDragging) {\r\n            return;\r\n        }\r\n\r\n        this.endPoint = getPointFromEvent(event);\r\n        if(!this.endPoint) {\r\n            return;\r\n        }\r\n        \r\n        // Â¤ AREAS SIZE PIXEL\r\n\r\n        let offsetPixel = (this.direction === 'horizontal') ? (this.startPoint.x - this.endPoint.x) : (this.startPoint.y - this.endPoint.y);\r\n        if(this.dir === 'rtl') {\r\n            offsetPixel = -offsetPixel;\r\n        }\r\n\r\n        let newSizePixelA = this.dragStartValues.sizePixelA - offsetPixel;\r\n        let newSizePixelB = this.dragStartValues.sizePixelB + offsetPixel;\r\n        \r\n        if(newSizePixelA < this.gutterSize && newSizePixelB < this.gutterSize) {\r\n            // WTF.. get out of here!\r\n            return;\r\n        }\r\n        else if(newSizePixelA < this.gutterSize) {\r\n            newSizePixelB += newSizePixelA;\r\n            newSizePixelA = 0;\r\n        }\r\n        else if(newSizePixelB < this.gutterSize) {\r\n            newSizePixelA += newSizePixelB;\r\n            newSizePixelB = 0;\r\n        }\r\n\r\n        // Â¤ AREAS SIZE PERCENT\r\n\r\n        if(newSizePixelA === 0) {\r\n            areaB.size += areaA.size;\r\n            areaA.size = 0;\r\n        }\r\n        else if(newSizePixelB === 0) {\r\n            areaA.size += areaB.size;\r\n            areaB.size = 0;\r\n        }\r\n        else {\r\n            // NEW_PERCENT = START_PERCENT / START_PIXEL * NEW_PIXEL;\r\n            if(this.dragStartValues.sizePercentA === 0) {\r\n                areaB.size = this.dragStartValues.sizePercentB / this.dragStartValues.sizePixelB * newSizePixelB;\r\n                areaA.size = this.dragStartValues.sizePercentB - areaB.size;\r\n            }\r\n            else if(this.dragStartValues.sizePercentB === 0) {\r\n                areaA.size = this.dragStartValues.sizePercentA / this.dragStartValues.sizePixelA * newSizePixelA;\r\n                areaB.size = this.dragStartValues.sizePercentA - areaA.size;\r\n            }\r\n            else {\r\n                areaA.size = this.dragStartValues.sizePercentA / this.dragStartValues.sizePixelA * newSizePixelA;\r\n                areaB.size = (this.dragStartValues.sizePercentA + this.dragStartValues.sizePercentB) - areaA.size;\r\n            }\r\n        }\r\n\r\n        this.refreshStyleSizes();\r\n        \r\n        // If moved from starting point, notify progress\r\n        if(this.startPoint.x !== this.endPoint.x || this.startPoint.y !== this.endPoint.y) {\r\n            this.notify('progress');\r\n        }\r\n    }\r\n\r\n    private stopDragging(event?: Event): void {\r\n        if(event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        \r\n        if(this.isDragging === false) {\r\n            return;\r\n        }\r\n        \r\n        this.displayedAreas.forEach(area => {\r\n            area.component.unlockEvents();\r\n        });\r\n        \r\n        while(this.dragListeners.length > 0) {\r\n            const fct = this.dragListeners.pop();\r\n            if(fct) {\r\n                fct();\r\n            }\r\n        }\r\n        \r\n        // If moved from starting point, notify end\r\n        if(event && this.endPoint && (this.startPoint.x !== this.endPoint.x || this.startPoint.y !== this.endPoint.y)) {\r\n            this.notify('end');\r\n        }\r\n        \r\n        this.isDragging = false;\r\n        this.renderer.removeClass(this.elRef.nativeElement, 'is-dragging');\r\n        this.renderer.removeClass(this.gutterEls.toArray()[this.currentGutterNum-1].nativeElement, 'is-dragged');\r\n\r\n        // Needed to let (click)=\"clickGutter(...)\" event run and verify if mouse moved or not\r\n        this.ngZone.runOutsideAngular(() => {\r\n            setTimeout(() => {\r\n                this.startPoint = null;\r\n                this.endPoint = null;\r\n            })\r\n        });\r\n    }\r\n\r\n    public notify(type: 'start' | 'progress' | 'end' | 'click' | 'transitionEnd'): void {\r\n        const sizes: Array<number> = this.displayedAreas.map(a => a.size * 100);\r\n\r\n        if(type === 'start') {\r\n            if(this.dragStartSubscriber) {\r\n                this.ngZone.run(() => this.dragStartSubscriber.next({gutterNum: this.currentGutterNum, sizes}));\r\n            }\r\n        }\r\n        else if(type === 'end') {\r\n            if(this.dragEndSubscriber) {\r\n                this.ngZone.run(() => this.dragEndSubscriber.next({gutterNum: this.currentGutterNum, sizes}));\r\n            }\r\n        }\r\n        else if(type === 'click') {\r\n            if(this.gutterClickSubscriber) {\r\n                this.ngZone.run(() => this.gutterClickSubscriber.next({gutterNum: this.currentGutterNum, sizes}));\r\n            }\r\n        }\r\n        else if(type === 'transitionEnd') {\r\n            if(this.transitionEndSubscriber) {\r\n                this.ngZone.run(() => this.transitionEndSubscriber.next(sizes));\r\n            }\r\n        }\r\n        else if(type === 'progress') {\r\n            // Stay outside zone to allow users do what they want about change detection mechanism.\r\n            this.dragProgressSubject.next({gutterNum: this.currentGutterNum, sizes});\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.stopDragging();\r\n    }\r\n}\r\n","import { Directive, Input, ElementRef, Renderer2, OnInit, OnDestroy, NgZone } from '@angular/core';\r\n\r\nimport { SplitComponent } from '../component/split.component';\r\nimport { getInputBoolean } from '../utils';\r\n\r\n@Directive({\r\n    selector: 'as-split-area, [as-split-area]'\r\n})\r\nexport class SplitAreaDirective implements OnInit, OnDestroy {\r\n\r\n    private _order: number | null = null;\r\n\r\n    @Input() set order(v: number | null) {\r\n        v = Number(v);\r\n        this._order = !isNaN(v) ? v : null;\r\n\r\n        this.split.updateArea(this, true, false);\r\n    }\r\n    \r\n    get order(): number | null {\r\n        return this._order;\r\n    }\r\n\r\n    ////\r\n\r\n    private _size: number | null = null;\r\n\r\n    @Input() set size(v: number | null) {\r\n        v = Number(v);\r\n        this._size = (!isNaN(v) && v >= 0 && v <= 100) ? (v/100) : null;\r\n\r\n        this.split.updateArea(this, false, true);\r\n    }\r\n    \r\n    get size(): number | null {\r\n        return this._size;\r\n    }\r\n\r\n    ////\r\n\r\n    private _visible: boolean = true;\r\n\r\n    @Input() set visible(v: boolean) {\r\n        this._visible = getInputBoolean(v);\r\n\r\n        if(this._visible) { \r\n            this.split.showArea(this);\r\n            this.renderer.removeClass(this.elRef.nativeElement, 'is-hided');\r\n        }\r\n        else {\r\n            this.split.hideArea(this);\r\n            this.renderer.addClass(this.elRef.nativeElement, 'is-hided');\r\n        }\r\n    }\r\n\r\n    get visible(): boolean {\r\n        return this._visible;\r\n    }\r\n\r\n    ////\r\n\r\n    private transitionListener: Function;\r\n    private readonly lockListeners: Array<Function> = [];\r\n\r\n    constructor(private ngZone: NgZone,\r\n                public elRef: ElementRef,\r\n                private renderer: Renderer2,\r\n                private split: SplitComponent) {\r\n        this.renderer.addClass(this.elRef.nativeElement, 'as-split-area');\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.split.addArea(this);\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.transitionListener = this.renderer.listen(this.elRef.nativeElement, 'transitionend', (event: TransitionEvent) => {\r\n                // Limit only flex-basis transition to trigger the event\r\n                if(event.propertyName === 'flex-basis') {\r\n                    this.split.notify('transitionEnd');\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    public setStyleOrder(value: number): void {\r\n        this.renderer.setStyle(this.elRef.nativeElement, 'order', value);\r\n    }\r\n    \r\n    public setStyleFlexbasis(value: string): void {\r\n        this.renderer.setStyle(this.elRef.nativeElement, 'flex-basis', value);\r\n    }\r\n    \r\n    public lockEvents(): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.lockListeners.push( this.renderer.listen(this.elRef.nativeElement, 'selectstart', (e: Event) => false) );\r\n            this.lockListeners.push( this.renderer.listen(this.elRef.nativeElement, 'dragstart', (e: Event) => false) );\r\n        });\r\n    }\r\n\r\n    public unlockEvents(): void {\r\n        while(this.lockListeners.length > 0) {\r\n            const fct = this.lockListeners.pop();\r\n            if(fct) {\r\n                fct();\r\n            }\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.unlockEvents();\r\n\r\n        if(this.transitionListener) {\r\n            this.transitionListener();\r\n        }\r\n\r\n        this.split.removeArea(this);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EventManager } from '@angular/platform-browser';\r\n\r\n/**\r\n * Credit to Michael Strobel from:\r\n * https://github.com/kryops/ng2-events\r\n */\r\n@Injectable()\r\nexport class UndetectedEventPlugin {\r\n    manager: EventManager;\r\n\r\n    supports(eventName: string): boolean {\r\n        return eventName.indexOf('as-split-undetected.') === 0;\r\n    }\r\n\r\n    addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\r\n        const realEventName = eventName.slice(20);\r\n\r\n        return this.manager.getZone().runOutsideAngular(() => this.manager.addEventListener(element, realEventName, handler));\r\n    }\r\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EVENT_MANAGER_PLUGINS } from '@angular/platform-browser';\r\n\r\nimport { SplitComponent } from './component/split.component';\r\nimport { SplitAreaDirective } from './directive/splitArea.directive';\r\nimport { UndetectedEventPlugin } from \"./service/UndetectedEventPlugin\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        SplitComponent,\r\n        SplitAreaDirective,\r\n    ],\r\n    exports: [\r\n        SplitComponent,\r\n        SplitAreaDirective,\r\n    ]\r\n})\r\nexport class AngularSplitModule {\r\n\r\n    public static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: AngularSplitModule,\r\n            providers: [{\r\n                provide: EVENT_MANAGER_PLUGINS,\r\n                useClass: UndetectedEventPlugin,\r\n                multi: true\r\n            }]\r\n        };\r\n    }\r\n\r\n    public static forChild(): ModuleWithProviders {\r\n        return {\r\n            ngModule: AngularSplitModule,\r\n            providers: []\r\n        };\r\n    }\r\n\r\n}\r\n"],"names":[],"mappings":"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"}
