{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://angular-split/lib/utils.ts","ng://angular-split/lib/component/split.component.ts","ng://angular-split/lib/directive/splitArea.directive.ts","ng://angular-split/lib/service/UndetectedEventPlugin.ts","ng://angular-split/lib/module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","getPointFromEvent","event","touches","undefined","x","clientX","y","clientY","getPixelSize","elRef","direction","nativeElement","getInputBoolean","v","isValidTotalSize","total","SplitComponent","ngZone","cdRef","renderer","this","_direction","_gutterSize","_useTransition","_disabled","_dir","dragProgressSubject","Subject","dragProgress$","asObservable","isDragging","currentGutterNum","startPoint","endPoint","displayedAreas","hidedAreas","dragListeners","dragStartValues","sizePixelContainer","sizePixelA","sizePixelB","sizePercentA","sizePercentB","Object","defineProperty","prototype","addClass","removeClass","build","Number","isNaN","setAttribute","_this","Observable","subscriber","dragStartSubscriber","dragEndSubscriber","gutterClickSubscriber","transitionEndSubscriber","pipe","debounceTime","ngAfterViewInit","runOutsideAngular","setTimeout","getNbGutters","addArea","component","newArea","order","size","visible","removeArea","some","a","area","find","splice","indexOf","updateArea","resetOrders","resetSizes","showArea","areas","_a","apply","hideArea","comp","forEach","getVisibleAreaSizes","map","setVisibleAreaSizes","sizes","s","reduce","_size","stopDragging","every","sort","b","setStyleOrder","totalUserSize","size_1","percentToDispatch","containerSizePixel","gutterSize","nbAreasNotZero","filter","percentToAdd_1","refreshStyleSizes","markForCheck","sumGutterSize","setStyleFlexbasis","clickGutter","gutterNum","preventDefault","stopPropagation","notify","startDragging","gutterOrder","disabled","areaA","areaB","listen","bind","dragEvent","lockEvents","gutterEls","toArray","offsetPixel","dir","newSizePixelA","newSizePixelB","unlockEvents","fct","pop","type","run","ngOnDestroy","Component","args","selector","changeDetection","ChangeDetectionStrategy","OnPush","template","NgZone","ElementRef","ChangeDetectorRef","Renderer2","Input","Output","ViewChildren","SplitAreaDirective","split","_order","_visible","lockListeners","ngOnInit","transitionListener","propertyName","setStyle","Directive","UndetectedEventPlugin","supports","eventName","addEventListener","element","handler","realEventName","slice","manager","getZone","Injectable","AngularSplitModule","forRoot","ngModule","providers","provide","EVENT_MANAGER_PLUGINS","useClass","multi","forChild","NgModule","imports","CommonModule","declarations","exports"],"mappings":"yfAcA,SAuGgBA,EAAOC,EAAGC,GACtB,IAAIC,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UACjD,IAAKF,EAAG,OAAOF,EACf,IAAmBK,EAAYC,EAA3BC,EAAIL,EAAEM,KAAKR,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANR,GAAsB,EAANA,QAAcI,EAAIE,EAAEG,QAAQC,MAAMF,EAAGG,KAAKP,EAAEQ,OAExE,MAAOC,GAASR,EAAI,CAAEQ,MAAOA,WAEzB,IACQT,IAAMA,EAAEM,OAAST,EAAIK,EAAU,YAAIL,EAAEM,KAAKD,WAExC,GAAID,EAAG,MAAMA,EAAEQ,OAE7B,OAAOL,EAGX,SAAgBM,IACZ,IAAK,IAAIN,EAAK,GAAIF,EAAI,EAAGA,EAAIS,UAAUC,OAAQV,IAC3CE,EAAKA,EAAGS,OAAOnB,EAAOiB,UAAUT,KACpC,OAAOE,ECpIX,SAAgBU,EAAkBC,GAE9B,OAAG,EAAqBC,UAAYC,WAAmD,EAAtC,EAAqBD,QAAQJ,OACnE,CACHM,EAAG,EAAqBF,QAAQ,GAAGG,QACnCC,EAAG,EAAqBJ,QAAQ,GAAGK,SAInC,EAAqBF,UAAYF,WAAa,EAAqBI,UAAYJ,UAC5E,CACHC,EAAG,EAAqBC,QACxBC,EAAG,EAAqBC,SAGzB,KAGX,SAAgBC,EAAaC,EAAmBC,GAC5C,OAAOD,EAAME,cAA6B,eAAdD,EAA8B,cAAgB,gBAI9E,SAAgBE,EAAgBC,GAC5B,MAAsB,kBAAd,EAA2BA,EAAW,UAANA,EAG5C,SAAgBC,EAAiBC,GAC7B,MAAe,KAARA,GAAgBA,EAAQ,MCQnC,IAAAC,EAAA,WAgJI,SAAAA,EAAoBC,EACAR,EACAS,EACAC,GAHAC,KAAAH,OAAAA,EACAG,KAAAX,MAAAA,EACAW,KAAAF,MAAAA,EACAE,KAAAD,SAAAA,EA9HZC,KAAAC,WAAwC,aAiBxCD,KAAAE,YAAsB,GAetBF,KAAAG,gBAA0B,EAe1BH,KAAAI,WAAqB,EAerBJ,KAAAK,KAAsB,MAqCtBL,KAAAM,oBAA0E,IAAIC,EAAAA,QACtFP,KAAAQ,cAAuER,KAAKM,oBAAoBG,eAIxFT,KAAAU,YAAsB,EACtBV,KAAAW,iBAA2B,EAC3BX,KAAAY,WAA4B,KAC5BZ,KAAAa,SAA0B,KAElBb,KAAAc,eAA+B,GAC9Bd,KAAAe,WAA2B,GAE3Bf,KAAAgB,cAAiC,GACjChB,KAAAiB,gBAAkB,CAC/BC,mBAAoB,EACpBC,WAAY,EACZC,WAAY,EACZC,aAAc,EACdC,aAAc,GAUdtB,KAAKV,UAAYU,KAAKC,WAqY9B,OAngBIsB,OAAAC,eAAa5B,EAAA6B,UAAA,YAAS,KAStB,WACI,OAAOzB,KAAKC,gBAVhB,SAAuBR,GACnBO,KAAKC,WAAoB,aAANR,EAAoB,WAAa,aAEpDO,KAAKD,SAAS2B,SAAS1B,KAAKX,MAAME,cAAe,MAAOS,KAAKC,YAC7DD,KAAKD,SAAS4B,YAAY3B,KAAKX,MAAME,cAAe,OAA4B,aAApBS,KAAKC,WAA6B,aAAe,aAE7GD,KAAK4B,OAAM,GAAO,oCAWtBL,OAAAC,eAAa5B,EAAA6B,UAAA,aAAU,KAOvB,WACI,OAAOzB,KAAKE,iBARhB,SAAwBT,GACpBA,EAAIoC,OAAOpC,GACXO,KAAKE,aAAgB4B,MAAMrC,IAAU,EAAJA,EAASA,EAAI,GAE9CO,KAAK4B,OAAM,GAAO,oCAWtBL,OAAAC,eAAa5B,EAAA6B,UAAA,gBAAa,KAO1B,WACI,OAAOzB,KAAKG,oBARhB,SAA2BV,GACvBO,KAAKG,eAAiBX,EAAgBC,GAEnCO,KAAKG,eAAgBH,KAAKD,SAAS2B,SAAS1B,KAAKX,MAAME,cAAe,iBACjDS,KAAKD,SAAS4B,YAAY3B,KAAKX,MAAME,cAAe,kDAWhFgC,OAAAC,eAAa5B,EAAA6B,UAAA,WAAQ,KAOrB,WACI,OAAOzB,KAAKI,eARhB,SAAsBX,GAClBO,KAAKI,UAAYZ,EAAgBC,GAE9BO,KAAKI,UAAYJ,KAAKD,SAAS2B,SAAS1B,KAAKX,MAAME,cAAe,eACjDS,KAAKD,SAAS4B,YAAY3B,KAAKX,MAAME,cAAe,gDAW5EgC,OAAAC,eAAa5B,EAAA6B,UAAA,MAAG,KAOhB,WACI,OAAOzB,KAAKK,UARhB,SAAiBZ,GACbA,EAAW,QAANA,EAAe,MAAQ,MAC5BO,KAAKK,KAAOZ,EAEZO,KAAKD,SAASgC,aAAa/B,KAAKX,MAAME,cAAe,MAAOS,KAAKK,uCAUrEkB,OAAAC,eAAc5B,EAAA6B,UAAA,YAAS,KAAvB,WAAA,IAAAO,EAAAhC,KACI,OAAO,IAAIiC,EAAAA,WAAW,SAAAC,GAAc,OAAAF,EAAKG,oBAAsBD,qCAInEX,OAAAC,eAAc5B,EAAA6B,UAAA,UAAO,KAArB,WAAA,IAAAO,EAAAhC,KACI,OAAO,IAAIiC,EAAAA,WAAW,SAAAC,GAAc,OAAAF,EAAKI,kBAAoBF,qCAIjEX,OAAAC,eAAc5B,EAAA6B,UAAA,cAAW,KAAzB,WAAA,IAAAO,EAAAhC,KACI,OAAO,IAAIiC,EAAAA,WAAW,SAAAC,GAAc,OAAAF,EAAKK,sBAAwBH,qCAIrEX,OAAAC,eAAc5B,EAAA6B,UAAA,gBAAa,KAA3B,WAAA,IAAAO,EAAAhC,KACI,OAAO,IAAIiC,EAAAA,WAAW,SAAAC,GAAc,OAAAF,EAAKM,wBAA0BJ,IAAYK,KAC3EC,EAAAA,aAA4B,sCAoC7B5C,EAAA6B,UAAAgB,gBAAP,WAAA,IAAAT,EAAAhC,KACIA,KAAKH,OAAO6C,kBAAkB,WAE1BC,WAAW,WAAM,OAAAX,EAAKjC,SAAS2B,SAASM,EAAK3C,MAAME,cAAe,gBAIlEK,EAAA6B,UAAAmB,aAAR,WACI,OAAuC,IAA/B5C,KAAKc,eAAepC,OAAgB,EAAIsB,KAAKc,eAAepC,OAAS,GAG1EkB,EAAA6B,UAAAoB,QAAP,SAAeC,OACLC,EAAiB,CACnBD,UAASA,EACTE,MAAO,EACPC,KAAM,IAGe,IAAtBH,EAAUI,SACTlD,KAAKc,eAAezC,KAAK0E,GAEzB/C,KAAK4B,OAAM,GAAM,IAGjB5B,KAAKe,WAAW1C,KAAK0E,IAItBnD,EAAA6B,UAAA0B,WAAP,SAAkBL,GACd,GAAG9C,KAAKc,eAAesC,KAAK,SAAAC,GAAK,OAAAA,EAAEP,YAAcA,IAAY,KACnDQ,EAAOtD,KAAKc,eAAeyC,KAAK,SAAAF,GAAK,OAAAA,EAAEP,YAAcA,IAC3D9C,KAAKc,eAAe0C,OAAOxD,KAAKc,eAAe2C,QAAQH,GAAO,GAE9DtD,KAAK4B,OAAM,GAAM,QAEhB,GAAG5B,KAAKe,WAAWqC,KAAK,SAAAC,GAAK,OAAAA,EAAEP,YAAcA,IAAY,CACpDQ,EAAOtD,KAAKe,WAAWwC,KAAK,SAAAF,GAAK,OAAAA,EAAEP,YAAcA,IACvD9C,KAAKe,WAAWyC,OAAOxD,KAAKe,WAAW0C,QAAQH,GAAO,KAIvD1D,EAAA6B,UAAAiC,WAAP,SAAkBZ,EAA+Ba,EAAsBC,GAEtD5D,KAAKc,eAAeyC,KAAK,SAAAF,GAAK,OAAAA,EAAEP,YAAcA,KAK3D9C,KAAK4B,MAAM+B,EAAaC,IAGrBhE,EAAA6B,UAAAoC,SAAP,SAAgBf,SACNQ,EAAOtD,KAAKe,WAAWwC,KAAK,SAAAF,GAAK,OAAAA,EAAEP,YAAcA,IACvD,GAAIQ,EAAJ,KAIMQ,EAAQ9D,KAAKe,WAAWyC,OAAOxD,KAAKe,WAAW0C,QAAQH,GAAO,IACpES,EAAA/D,KAAKc,gBAAezC,KAAI2F,MAAAD,EAAAvF,EAAIsF,IAE5B9D,KAAK4B,OAAM,GAAM,KAGdhC,EAAA6B,UAAAwC,SAAP,SAAgBC,SACNZ,EAAOtD,KAAKc,eAAeyC,KAAK,SAAAF,GAAK,OAAAA,EAAEP,YAAcoB,IAC3D,GAAIZ,EAAJ,KAIMQ,EAAQ9D,KAAKc,eAAe0C,OAAOxD,KAAKc,eAAe2C,QAAQH,GAAO,GAC5EQ,EAAMK,QAAQ,SAAAb,GACVA,EAAKN,MAAQ,EACbM,EAAKL,KAAO,KAEhBc,EAAA/D,KAAKe,YAAW1C,KAAI2F,MAAAD,EAAAvF,EAAIsF,IAExB9D,KAAK4B,OAAM,GAAM,KAGdhC,EAAA6B,UAAA2C,oBAAP,WACI,OAAOpE,KAAKc,eAAeuD,IAAI,SAAAhB,GAAK,OAAS,IAATA,EAAEJ,QAGnCrD,EAAA6B,UAAA6C,oBAAP,SAA2BC,GACvB,OAAGA,EAAM7F,SAAWsB,KAAKc,eAAepC,WAOpCgB,GAHJ6E,EAAQA,EAAMF,IAAI,SAAAG,GAAK,OAAAA,EAAI,OAEPC,OAAO,SAAC9E,EAAeF,GAAc,OAAAE,EAAQF,GAAG,MAKpEO,KAAKc,eAAeqD,QAAQ,SAACb,EAAMtF,GAE/BsF,EAAKR,UAAU4B,MAAQH,EAAMvG,KAGjCgC,KAAK4B,OAAM,GAAO,IACX,KAGHhC,EAAA6B,UAAAG,MAAR,SAAc+B,EAAsBC,GAApC,IAAA5B,EAAAhC,KAsBI,GArBAA,KAAK2E,gBAIc,IAAhBhB,IAGI3D,KAAKc,eAAe8D,MAAM,SAAAvB,GAAK,OAAsB,OAAtBA,EAAEP,UAAUE,SAC1ChD,KAAKc,eAAe+D,KAAK,SAACxB,EAAGyB,GAAM,OAAUzB,EAAEP,UAAe,MAAcgC,EAAEhC,UAAe,QAIjG9C,KAAKc,eAAeqD,QAAQ,SAACb,EAAMtF,GAC/BsF,EAAKN,MAAY,EAAJhF,EACbsF,EAAKR,UAAUiC,cAAczB,EAAKN,WAOxB,IAAfY,EAAqB,KAEdoB,EAAyBhF,KAAKc,eAAe2D,OAAO,SAAC9E,EAAe6E,GAAa,OAAAA,EAAE1B,UAAUG,KAAOtD,EAAQ6E,EAAE1B,UAAUG,KAAOtD,GAAO,GAG5I,GAAGK,KAAKc,eAAe8D,MAAM,SAAAvB,GAAK,OAAqB,OAArBA,EAAEP,UAAUG,QAAkBvD,EAAiBsF,GAE7EhF,KAAKc,eAAeqD,QAAQ,SAAAb,GACxBA,EAAKL,KAAgBK,EAAKR,UAAc,WAI3C,KACKmC,EAAO,EAAIjF,KAAKc,eAAepC,OAErCsB,KAAKc,eAAeqD,QAAQ,SAAAb,GACxBA,EAAKL,KAAOgC,SASpBC,EAAoB,EAGlBC,EAAqB/F,EAAaY,KAAKX,MAAOW,KAAKV,WASzD,GAPAU,KAAKc,eAAeqD,QAAQ,SAAAb,GACrBA,EAAKL,KAAOkC,EAAqBnD,EAAKoD,aACrCF,GAAqB5B,EAAKL,KAC1BK,EAAKL,KAAO,KAIG,EAApBiC,GAAsD,EAA7BlF,KAAKc,eAAepC,OAAY,KAClD2G,EAAiBrF,KAAKc,eAAewE,OAAO,SAAAjC,GAAK,OAAW,IAAXA,EAAEJ,OAAYvE,OAErE,GAAoB,EAAjB2G,EAAoB,KACbE,EAAeL,EAAoBG,EAEzCrF,KAAKc,eAAewE,OAAO,SAAAjC,GAAK,OAAW,IAAXA,EAAEJ,OAAYkB,QAAQ,SAAAb,GAClDA,EAAKL,MAAQsC,SAMjBvF,KAAKc,eAAed,KAAKc,eAAepC,OAAS,GAAGuE,KAAO,EAInEjD,KAAKwF,oBACLxF,KAAKF,MAAM2F,gBAGP7F,EAAA6B,UAAA+D,kBAAR,eACUE,EAAgB1F,KAAK4C,eAAiB5C,KAAKoF,WAEjDpF,KAAKc,eAAeqD,QAAQ,SAAAb,GACxBA,EAAKR,UAAU6C,kBAAkB,SAAsB,IAAZrC,EAAKL,KAAU,OAASK,EAAKL,KAAOyC,EAAa,WAI7F9F,EAAA6B,UAAAmE,YAAP,SAAmB/G,EAAmBgH,GAClChH,EAAMiH,iBACNjH,EAAMkH,kBAEH/F,KAAKY,YAAcZ,KAAKY,WAAW5B,IAAMH,EAAMI,SAAWe,KAAKY,WAAW1B,IAAML,EAAMM,UACrFa,KAAKW,iBAAmBkF,EAExB7F,KAAKgG,OAAO,WAIbpG,EAAA6B,UAAAwE,cAAP,SAAqBpH,EAAgCqH,EAAqBL,GAA1E,IAAA7D,EAAAhC,KAKI,GAJAnB,EAAMiH,iBACNjH,EAAMkH,kBAEN/F,KAAKY,WAAahC,EAAkBC,GAChCmB,KAAKY,aAAcZ,KAAKmG,SAA5B,KAIMC,EAAQpG,KAAKc,eAAeyC,KAAK,SAAAF,GAAK,OAAAA,EAAEL,QAAUkD,EAAc,IAChEG,EAAQrG,KAAKc,eAAeyC,KAAK,SAAAF,GAAK,OAAAA,EAAEL,QAAUkD,EAAc,IAElEE,GAAUC,IAIdrG,KAAKiB,gBAAgBC,mBAAqB9B,EAAaY,KAAKX,MAAOW,KAAKV,WACxEU,KAAKiB,gBAAgBE,WAAa/B,EAAagH,EAAMtD,UAAUzD,MAAOW,KAAKV,WAC3EU,KAAKiB,gBAAgBG,WAAahC,EAAaiH,EAAMvD,UAAUzD,MAAOW,KAAKV,WAC3EU,KAAKiB,gBAAgBI,aAAe+E,EAAMnD,KAC1CjD,KAAKiB,gBAAgBK,aAAe+E,EAAMpD,KAC1CjD,KAAKW,iBAAmBkF,EAExB7F,KAAKH,OAAO6C,kBAAkB,WAC1BV,EAAKhB,cAAc3C,KAAM2D,EAAKjC,SAASuG,OAAO,WAAY,UAAWtE,EAAK2C,aAAa4B,KAAKvE,KAC5FA,EAAKhB,cAAc3C,KAAM2D,EAAKjC,SAASuG,OAAO,WAAY,WAAYtE,EAAK2C,aAAa4B,KAAKvE,KAC7FA,EAAKhB,cAAc3C,KAAM2D,EAAKjC,SAASuG,OAAO,WAAY,cAAetE,EAAK2C,aAAa4B,KAAKvE,KAEhGA,EAAKhB,cAAc3C,KAAM2D,EAAKjC,SAASuG,OAAO,WAAY,YAAa,SAACvI,GAAkB,OAAAiE,EAAKwE,UAAUzI,EAAGqI,EAAOC,MACnHrE,EAAKhB,cAAc3C,KAAM2D,EAAKjC,SAASuG,OAAO,WAAY,YAAa,SAACvI,GAAkB,OAAAiE,EAAKwE,UAAUzI,EAAGqI,EAAOC,QAGvHD,EAAMtD,UAAU2D,aAChBJ,EAAMvD,UAAU2D,aAEhBzG,KAAKU,YAAa,EAClBV,KAAKD,SAAS2B,SAAS1B,KAAKX,MAAME,cAAe,eACjDS,KAAKD,SAAS2B,SAAS1B,KAAK0G,UAAUC,UAAU3G,KAAKW,iBAAiB,GAAGpB,cAAe,cAExFS,KAAKgG,OAAO,YAGRpG,EAAA6B,UAAA+E,UAAR,SAAkB3H,EAAgCuH,EAAcC,GAI5D,GAHAxH,EAAMiH,iBACNjH,EAAMkH,kBAEF/F,KAAKU,aAITV,KAAKa,SAAWjC,EAAkBC,GAC9BmB,KAAKa,UAAT,KAMI+F,EAAkC,eAAnB5G,KAAKV,UAA+BU,KAAKY,WAAW5B,EAAIgB,KAAKa,SAAS7B,EAAMgB,KAAKY,WAAW1B,EAAIc,KAAKa,SAAS3B,EACjH,QAAbc,KAAK6G,MACJD,GAAeA,OAGfE,EAAgB9G,KAAKiB,gBAAgBE,WAAayF,EAClDG,EAAgB/G,KAAKiB,gBAAgBG,WAAawF,EAEnDE,EAAgB9G,KAAKoF,YAAc2B,EAAgB/G,KAAKoF,aAInD0B,EAAgB9G,KAAKoF,YACzB2B,GAAiBD,EACjBA,EAAgB,GAEZC,EAAgB/G,KAAKoF,aACzB0B,GAAiBC,EACjBA,EAAgB,GAKC,IAAlBD,GACCT,EAAMpD,MAAQmD,EAAMnD,KACpBmD,EAAMnD,KAAO,GAES,IAAlB8D,GACJX,EAAMnD,MAAQoD,EAAMpD,KACpBoD,EAAMpD,KAAO,GAI4B,IAAtCjD,KAAKiB,gBAAgBI,cACpBgF,EAAMpD,KAAOjD,KAAKiB,gBAAgBK,aAAetB,KAAKiB,gBAAgBG,WAAa2F,EACnFX,EAAMnD,KAAOjD,KAAKiB,gBAAgBK,aAAe+E,EAAMpD,MAEb,IAAtCjD,KAAKiB,gBAAgBK,cACzB8E,EAAMnD,KAAOjD,KAAKiB,gBAAgBI,aAAerB,KAAKiB,gBAAgBE,WAAa2F,EACnFT,EAAMpD,KAAOjD,KAAKiB,gBAAgBI,aAAe+E,EAAMnD,OAGvDmD,EAAMnD,KAAOjD,KAAKiB,gBAAgBI,aAAerB,KAAKiB,gBAAgBE,WAAa2F,EACnFT,EAAMpD,KAAQjD,KAAKiB,gBAAgBI,aAAerB,KAAKiB,gBAAgBK,aAAgB8E,EAAMnD,MAIrGjD,KAAKwF,oBAGFxF,KAAKY,WAAW5B,IAAMgB,KAAKa,SAAS7B,GAAKgB,KAAKY,WAAW1B,IAAMc,KAAKa,SAAS3B,GAC5Ec,KAAKgG,OAAO,eAIZpG,EAAA6B,UAAAkD,aAAR,SAAqB9F,GAArB,IAAAmD,EAAAhC,KAMI,GALGnB,IACCA,EAAMiH,iBACNjH,EAAMkH,oBAGa,IAApB/F,KAAKU,WAAR,CAQA,IAJAV,KAAKc,eAAeqD,QAAQ,SAAAb,GACxBA,EAAKR,UAAUkE,iBAGe,EAA5BhH,KAAKgB,cAActC,QAAY,KAC3BuI,EAAMjH,KAAKgB,cAAckG,MAC5BD,GACCA,IAKLpI,GAASmB,KAAKa,WAAab,KAAKY,WAAW5B,IAAMgB,KAAKa,SAAS7B,GAAKgB,KAAKY,WAAW1B,IAAMc,KAAKa,SAAS3B,IACvGc,KAAKgG,OAAO,OAGhBhG,KAAKU,YAAa,EAClBV,KAAKD,SAAS4B,YAAY3B,KAAKX,MAAME,cAAe,eACpDS,KAAKD,SAAS4B,YAAY3B,KAAK0G,UAAUC,UAAU3G,KAAKW,iBAAiB,GAAGpB,cAAe,cAG3FS,KAAKH,OAAO6C,kBAAkB,WAC1BC,WAAW,WACPX,EAAKpB,WAAa,KAClBoB,EAAKnB,SAAW,WAKrBjB,EAAA6B,UAAAuE,OAAP,SAAcmB,GAAd,IAAAnF,EAAAhC,KACUuE,EAAuBvE,KAAKc,eAAeuD,IAAI,SAAAhB,GAAK,OAAS,IAATA,EAAEJ,OAEhD,UAATkE,EACInH,KAAKmC,qBACJnC,KAAKH,OAAOuH,IAAI,WAAM,OAAApF,EAAKG,oBAAoBhE,KAAK,CAAC0H,UAAW7D,EAAKrB,iBAAkB4D,MAAKA,MAGnF,QAAT4C,EACDnH,KAAKoC,mBACJpC,KAAKH,OAAOuH,IAAI,WAAM,OAAApF,EAAKI,kBAAkBjE,KAAK,CAAC0H,UAAW7D,EAAKrB,iBAAkB4D,MAAKA,MAGjF,UAAT4C,EACDnH,KAAKqC,uBACJrC,KAAKH,OAAOuH,IAAI,WAAM,OAAApF,EAAKK,sBAAsBlE,KAAK,CAAC0H,UAAW7D,EAAKrB,iBAAkB4D,MAAKA,MAGrF,kBAAT4C,EACDnH,KAAKsC,yBACJtC,KAAKH,OAAOuH,IAAI,WAAM,OAAApF,EAAKM,wBAAwBnE,KAAKoG,KAG/C,aAAT4C,GAEJnH,KAAKM,oBAAoBnC,KAAK,CAAC0H,UAAW7F,KAAKW,iBAAkB4D,MAAKA,KAIvE3E,EAAA6B,UAAA4F,YAAP,WACIrH,KAAK2E,oCAxhBZ2C,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,WACVC,gBAAiBC,EAAAA,wBAAwBC,OAEzCC,SAAU,49EA7CkHC,EAAAA,cAAZC,EAAAA,kBAAxDC,EAAAA,yBAAmBC,EAAAA,gDAgE1EC,EAAAA,0BAiBAA,EAAAA,6BAeAA,EAAAA,wBAeAA,EAAAA,mBAeAA,EAAAA,yBAcAC,EAAAA,wBAKAA,EAAAA,4BAKAA,EAAAA,8BAKAA,EAAAA,0BA4BAC,EAAAA,aAAYZ,KAAA,CAAC,gBA4YlB3H,EA1hBA,GCzCAwI,EAAA,WAgEI,SAAAA,EAAoBvI,EACDR,EACCU,EACAsI,GAHArI,KAAAH,OAAAA,EACDG,KAAAX,MAAAA,EACCW,KAAAD,SAAAA,EACAC,KAAAqI,MAAAA,EAzDZrI,KAAAsI,OAAwB,KAexBtI,KAAA0E,MAAuB,KAevB1E,KAAAuI,UAAoB,EAsBXvI,KAAAwI,cAAiC,GAM9CxI,KAAKD,SAAS2B,SAAS1B,KAAKX,MAAME,cAAe,iBAiDzD,OAzGIgC,OAAAC,eAAa4G,EAAA3G,UAAA,QAAK,KAOlB,WACI,OAAOzB,KAAKsI,YARhB,SAAmB7I,GACfA,EAAIoC,OAAOpC,GACXO,KAAKsI,OAAUxG,MAAMrC,GAAS,KAAJA,EAE1BO,KAAKqI,MAAM3E,WAAW1D,MAAM,GAAM,oCAWtCuB,OAAAC,eAAa4G,EAAA3G,UAAA,OAAI,KAOjB,WACI,OAAOzB,KAAK0E,WARhB,SAAkBjF,GACdA,EAAIoC,OAAOpC,GACXO,KAAK0E,OAAU5C,MAAMrC,IAAW,GAALA,GAAUA,GAAK,IAAQA,EAAE,IAAO,KAE3DO,KAAKqI,MAAM3E,WAAW1D,MAAM,GAAO,oCAWvCuB,OAAAC,eAAa4G,EAAA3G,UAAA,UAAO,KAapB,WACI,OAAOzB,KAAKuI,cAdhB,SAAqB9I,GACjBO,KAAKuI,SAAW/I,EAAgBC,GAE7BO,KAAKuI,UACJvI,KAAKqI,MAAMxE,SAAS7D,MACpBA,KAAKD,SAAS4B,YAAY3B,KAAKX,MAAME,cAAe,cAGpDS,KAAKqI,MAAMpE,SAASjE,MACpBA,KAAKD,SAAS2B,SAAS1B,KAAKX,MAAME,cAAe,8CAoBlD6I,EAAA3G,UAAAgH,SAAP,WAAA,IAAAzG,EAAAhC,KACIA,KAAKqI,MAAMxF,QAAQ7C,MAEnBA,KAAKH,OAAO6C,kBAAkB,WAC1BV,EAAK0G,mBAAqB1G,EAAKjC,SAASuG,OAAOtE,EAAK3C,MAAME,cAAe,gBAAiB,SAACV,GAE7D,eAAvBA,EAAM8J,cACL3G,EAAKqG,MAAMrC,OAAO,sBAM3BoC,EAAA3G,UAAAsD,cAAP,SAAqBzG,GACjB0B,KAAKD,SAAS6I,SAAS5I,KAAKX,MAAME,cAAe,QAASjB,IAGvD8J,EAAA3G,UAAAkE,kBAAP,SAAyBrH,GACrB0B,KAAKD,SAAS6I,SAAS5I,KAAKX,MAAME,cAAe,aAAcjB,IAG5D8J,EAAA3G,UAAAgF,WAAP,WAAA,IAAAzE,EAAAhC,KACIA,KAAKH,OAAO6C,kBAAkB,WAC1BV,EAAKwG,cAAcnK,KAAM2D,EAAKjC,SAASuG,OAAOtE,EAAK3C,MAAME,cAAe,cAAe,SAACxB,GAAa,OAAA,KACrGiE,EAAKwG,cAAcnK,KAAM2D,EAAKjC,SAASuG,OAAOtE,EAAK3C,MAAME,cAAe,YAAa,SAACxB,GAAa,OAAA,QAIpGqK,EAAA3G,UAAAuF,aAAP,WACI,KAAkC,EAA5BhH,KAAKwI,cAAc9J,QAAY,KAC3BuI,EAAMjH,KAAKwI,cAActB,MAC5BD,GACCA,MAKLmB,EAAA3G,UAAA4F,YAAP,WACIrH,KAAKgH,eAEFhH,KAAK0I,oBACJ1I,KAAK0I,qBAGT1I,KAAKqI,MAAMlF,WAAWnD,2BA9G7B6I,EAAAA,UAAStB,KAAA,CAAC,CACPC,SAAU,8EANuDK,EAAAA,cAA1CC,EAAAA,kBAAYE,EAAAA,iBAE9BpI,oCAUJqI,EAAAA,oBAeAA,EAAAA,uBAeAA,EAAAA,SA2ELG,EArHA,GCOAU,EAAA,WAAA,SAAAA,KAaA,OATIA,EAAArH,UAAAsH,SAAA,SAASC,GACL,OAAqD,IAA9CA,EAAUvF,QAAQ,yBAG7BqF,EAAArH,UAAAwH,iBAAA,SAAiBC,EAAsBF,EAAmBG,GAA1D,IAAAnH,EAAAhC,KACUoJ,EAAgBJ,EAAUK,MAAM,IAEtC,OAAOrJ,KAAKsJ,QAAQC,UAAU7G,kBAAkB,WAAM,OAAAV,EAAKsH,QAAQL,iBAAiBC,EAASE,EAAeD,0BAXnHK,EAAAA,aAaDV,EAbA,GCPAW,EAAA,WAQA,SAAAA,KAiCA,OAlBkBA,EAAAC,QAAd,WACI,MAAO,CACHC,SAAUF,EACVG,UAAW,CAAC,CACRC,QAASC,EAAAA,sBACTC,SAAUjB,EACVkB,OAAO,MAKLP,EAAAQ,SAAd,WACI,MAAO,CACHN,SAAUF,EACVG,UAAW,yBA7BtBM,EAAAA,SAAQ3C,KAAA,CAAC,CACN4C,QAAS,CACLC,EAAAA,cAEJC,aAAc,CACVzK,EACAwI,GAEJkC,QAAS,CACL1K,EACAwI,OAuBRqB,EAzCA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ElementRef } from '@angular/core';\r\n\r\nimport { IPoint } from './interface/IPoint';\r\n\r\n\r\nexport function getPointFromEvent(event: MouseEvent | TouchEvent): IPoint {\r\n    // TouchEvent\r\n    if((<TouchEvent> event).touches !== undefined && (<TouchEvent> event).touches.length > 0) {\r\n        return {\r\n            x: (<TouchEvent> event).touches[0].clientX,\r\n            y: (<TouchEvent> event).touches[0].clientY,\r\n        };\r\n    }\r\n    // MouseEvent\r\n    else if((<MouseEvent> event).clientX !== undefined && (<MouseEvent> event).clientY !== undefined) {\r\n        return {\r\n            x: (<MouseEvent> event).clientX,\r\n            y: (<MouseEvent> event).clientY,\r\n        };\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function getPixelSize(elRef: ElementRef, direction: 'horizontal' | 'vertical'): number {\r\n    return elRef.nativeElement[(direction === 'horizontal') ? 'offsetWidth' : 'offsetHeight'];\r\n\r\n}\r\n\r\nexport function getInputBoolean(v: any) {\r\n    return (typeof(v) === 'boolean') ? v : (v === 'false' ? false : true);\r\n}\r\n\r\nexport function isValidTotalSize(total: number): boolean {\r\n    return total > .999 && total < 1.001;\r\n}","import { Component, Input, Output, ChangeDetectionStrategy, ChangeDetectorRef, Renderer2, AfterViewInit, OnDestroy, ElementRef, NgZone, ViewChildren, QueryList } from '@angular/core';\r\nimport { Observable, Subscriber, Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { IArea } from '../interface/IArea';\r\nimport { IPoint } from '../interface/IPoint';\r\nimport { SplitAreaDirective } from '../directive/splitArea.directive';\r\nimport { getPointFromEvent, getPixelSize, getInputBoolean, isValidTotalSize } from '../utils';\r\n\r\n/**\r\n * angular-split\r\n * \r\n * Areas size are set in percentage of the split container.\r\n * Gutters size are set in pixels.\r\n * \r\n * So we set css 'flex-basis' property like this (where 0 <= area.size <= 1): \r\n *  calc( { area.size * 100 }% - { area.size * nbGutter * gutterSize }px );\r\n * \r\n * Examples with 3 visible areas and 2 gutters: \r\n * \r\n * |                     10px                   10px                                  |\r\n * |---------------------[]---------------------[]------------------------------------|\r\n * |  calc(20% - 4px)          calc(20% - 4px)              calc(60% - 12px)          |\r\n * \r\n * \r\n * |                          10px                        10px                        |\r\n * |--------------------------[]--------------------------[]--------------------------|\r\n * |  calc(33.33% - 6.667px)      calc(33.33% - 6.667px)      calc(33.33% - 6.667px)  |\r\n * \r\n * \r\n * |10px                                                  10px                        |\r\n * |[]----------------------------------------------------[]--------------------------|\r\n * |0                 calc(66.66% - 13.333px)                  calc(33%% - 6.667px)   |\r\n * \r\n * \r\n *  10px 10px                                                                         |\r\n * |[][]------------------------------------------------------------------------------|\r\n * |0 0                               calc(100% - 20px)                               |\r\n * \r\n */\r\n\r\n@Component({\r\n    selector: 'as-split',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    styleUrls: [`./split.component.scss`],\r\n    template: `\r\n        <ng-content></ng-content>\r\n        <ng-template ngFor [ngForOf]=\"displayedAreas\" let-index=\"index\" let-last=\"last\">\r\n            <div *ngIf=\"last === false\" \r\n                 #gutterEls\r\n                 class=\"as-split-gutter\"\r\n                 [style.flex-basis.px]=\"gutterSize\"\r\n                 [style.order]=\"index*2+1\"\r\n                 (as-split-undetected.click)=\"clickGutter($event, index+1)\"\r\n                 (as-split-undetected.mousedown)=\"startDragging($event, index*2+1, index+1)\"\r\n                 (as-split-undetected.touchstart)=\"startDragging($event, index*2+1, index+1)\">\r\n                <div class=\"as-split-gutter-icon\"></div>\r\n            </div>\r\n        </ng-template>`,\r\n})\r\nexport class SplitComponent implements AfterViewInit, OnDestroy {\r\n\r\n    private _direction: 'horizontal' | 'vertical' = 'horizontal';\r\n\r\n    @Input() set direction(v: 'horizontal' | 'vertical') {\r\n        this._direction = (v === 'vertical') ? 'vertical' : 'horizontal';\r\n        \r\n        this.renderer.addClass(this.elRef.nativeElement, `is-${ this._direction }`);\r\n        this.renderer.removeClass(this.elRef.nativeElement, `is-${ (this._direction === 'vertical') ? 'horizontal' : 'vertical' }`);\r\n        \r\n        this.build(false, false);\r\n    }\r\n    \r\n    get direction(): 'horizontal' | 'vertical' {\r\n        return this._direction;\r\n    }\r\n    \r\n    ////\r\n\r\n    private _gutterSize: number = 11;\r\n\r\n    @Input() set gutterSize(v: number) {\r\n        v = Number(v);\r\n        this._gutterSize = (!isNaN(v) && v > 0) ? v : 11;\r\n\r\n        this.build(false, false);\r\n    }\r\n    \r\n    get gutterSize(): number {\r\n        return this._gutterSize;\r\n    }\r\n    \r\n    ////\r\n\r\n    private _useTransition: boolean = false;\r\n\r\n    @Input() set useTransition(v: boolean) {\r\n        this._useTransition = getInputBoolean(v);\r\n\r\n        if(this._useTransition) this.renderer.addClass(this.elRef.nativeElement, 'is-transition');\r\n        else                    this.renderer.removeClass(this.elRef.nativeElement, 'is-transition');\r\n    }\r\n    \r\n    get useTransition(): boolean {\r\n        return this._useTransition;\r\n    }\r\n    \r\n    ////\r\n\r\n    private _disabled: boolean = false;\r\n    \r\n    @Input() set disabled(v: boolean) {\r\n        this._disabled = getInputBoolean(v);\r\n\r\n        if(this._disabled)  this.renderer.addClass(this.elRef.nativeElement, 'is-disabled');\r\n        else                this.renderer.removeClass(this.elRef.nativeElement, 'is-disabled');\r\n    }\r\n    \r\n    get disabled(): boolean {\r\n        return this._disabled;\r\n    }\r\n\r\n    ////\r\n\r\n    private _dir: 'ltr' | 'rtl' = 'ltr';\r\n    \r\n    @Input() set dir(v: 'ltr' | 'rtl') {\r\n        v = (v === 'rtl') ? 'rtl' : 'ltr';\r\n        this._dir = v;\r\n        \r\n        this.renderer.setAttribute(this.elRef.nativeElement, 'dir', this._dir);\r\n    }\r\n    \r\n    get dir(): 'ltr' | 'rtl' {\r\n        return this._dir;\r\n    }\r\n\r\n    ////\r\n\r\n    private dragStartSubscriber: Subscriber<{gutterNum: number, sizes: Array<number>}>\r\n    @Output() get dragStart(): Observable<{gutterNum: number, sizes: Array<number>}> {\r\n        return new Observable(subscriber => this.dragStartSubscriber = subscriber);\r\n    }\r\n\r\n    private dragEndSubscriber: Subscriber<{gutterNum: number, sizes: Array<number>}>\r\n    @Output() get dragEnd(): Observable<{gutterNum: number, sizes: Array<number>}> {\r\n        return new Observable(subscriber => this.dragEndSubscriber = subscriber);\r\n    }\r\n\r\n    private gutterClickSubscriber: Subscriber<{gutterNum: number, sizes: Array<number>}>\r\n    @Output() get gutterClick(): Observable<{gutterNum: number, sizes: Array<number>}> {\r\n        return new Observable(subscriber => this.gutterClickSubscriber = subscriber);\r\n    }\r\n\r\n    private transitionEndSubscriber: Subscriber<Array<number>>\r\n    @Output() get transitionEnd(): Observable<Array<number>> {\r\n        return new Observable(subscriber => this.transitionEndSubscriber = subscriber).pipe(\r\n            debounceTime<Array<number>>(20)\r\n        );\r\n    }\r\n    \r\n    private dragProgressSubject: Subject<{gutterNum: number, sizes: Array<number>}> = new Subject();\r\n    dragProgress$: Observable<{gutterNum: number, sizes: Array<number>}> = this.dragProgressSubject.asObservable();\r\n\r\n    ////\r\n\r\n    private isDragging: boolean = false;\r\n    private currentGutterNum: number = 0;\r\n    private startPoint: IPoint | null = null;\r\n    private endPoint: IPoint | null = null;\r\n\r\n    public readonly displayedAreas: Array<IArea> = [];\r\n    private readonly hidedAreas: Array<IArea> = [];\r\n    \r\n    private readonly dragListeners: Array<Function> = [];\r\n    private readonly dragStartValues = {\r\n        sizePixelContainer: 0,\r\n        sizePixelA: 0,\r\n        sizePixelB: 0,\r\n        sizePercentA: 0,\r\n        sizePercentB: 0,\r\n    };\r\n\r\n    @ViewChildren('gutterEls') private gutterEls: QueryList<ElementRef>;\r\n\r\n    constructor(private ngZone: NgZone,\r\n                private elRef: ElementRef,\r\n                private cdRef: ChangeDetectorRef,\r\n                private renderer: Renderer2) {\r\n        // To force adding default class, could be override by user @Input() or not\r\n        this.direction = this._direction;\r\n    }\r\n\r\n    public ngAfterViewInit() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            // To avoid transition at first rendering\r\n            setTimeout(() => this.renderer.addClass(this.elRef.nativeElement, 'is-init'));\r\n        });\r\n    }\r\n    \r\n    private getNbGutters(): number {\r\n        return (this.displayedAreas.length === 0) ? 0 : this.displayedAreas.length - 1;\r\n    }\r\n\r\n    public addArea(component: SplitAreaDirective): void {\r\n        const newArea: IArea = {\r\n            component, \r\n            order: 0, \r\n            size: 0,\r\n        };\r\n\r\n        if(component.visible === true) {\r\n            this.displayedAreas.push(newArea);\r\n\r\n            this.build(true, true);\r\n        }\r\n        else {\r\n            this.hidedAreas.push(newArea);\r\n        }\r\n    }\r\n\r\n    public removeArea(component: SplitAreaDirective): void {\r\n        if(this.displayedAreas.some(a => a.component === component)) {\r\n            const area = this.displayedAreas.find(a => a.component === component);\r\n            this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1);\r\n\r\n            this.build(true, true);\r\n        }\r\n        else if(this.hidedAreas.some(a => a.component === component)) {\r\n            const area = this.hidedAreas.find(a => a.component === component);\r\n            this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1);\r\n        }\r\n    }\r\n\r\n    public updateArea(component: SplitAreaDirective, resetOrders: boolean, resetSizes: boolean): void {\r\n        // Only refresh if area is displayed (No need to check inside 'hidedAreas')\r\n        const area = this.displayedAreas.find(a => a.component === component);\r\n        if(!area) {\r\n            return;\r\n        }\r\n\r\n        this.build(resetOrders, resetSizes);\r\n    }\r\n\r\n    public showArea(component: SplitAreaDirective): void {\r\n        const area = this.hidedAreas.find(a => a.component === component);\r\n        if(!area) {\r\n            return;\r\n        }\r\n\r\n        const areas = this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1);\r\n        this.displayedAreas.push(...areas);\r\n\r\n        this.build(true, true);\r\n    }\r\n\r\n    public hideArea(comp: SplitAreaDirective): void {\r\n        const area = this.displayedAreas.find(a => a.component === comp);\r\n        if(!area) {\r\n            return;\r\n        }\r\n\r\n        const areas = this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1);\r\n        areas.forEach(area => {\r\n            area.order = 0;\r\n            area.size = 0;\r\n        })\r\n        this.hidedAreas.push(...areas);\r\n\r\n        this.build(true, true);\r\n    }\r\n\r\n    public getVisibleAreaSizes(): Array<number> {\r\n        return this.displayedAreas.map(a => a.size * 100);\r\n    }\r\n\r\n    public setVisibleAreaSizes(sizes: Array<number>): boolean {\r\n        if(sizes.length !== this.displayedAreas.length) {\r\n            return false;\r\n        }\r\n\r\n        sizes = sizes.map(s => s / 100);\r\n\r\n        const total = sizes.reduce((total: number, v: number) => total + v, 0);\r\n        if(!isValidTotalSize(total)) {\r\n            return false;\r\n        }\r\n\r\n        this.displayedAreas.forEach((area, i) => {\r\n            // @ts-ignore\r\n            area.component._size = sizes[i];\r\n        })\r\n\r\n        this.build(false, true);\r\n        return true;\r\n    }\r\n\r\n    private build(resetOrders: boolean, resetSizes: boolean): void {\r\n        this.stopDragging();\r\n\r\n        // Â¤ AREAS ORDER\r\n        \r\n        if(resetOrders === true) {\r\n\r\n            // If user provided 'order' for each area, use it to sort them.\r\n            if(this.displayedAreas.every(a => a.component.order !== null)) {\r\n                this.displayedAreas.sort((a, b) => (<number> a.component.order) - (<number> b.component.order));\r\n            }\r\n    \r\n            // Then set real order with multiples of 2, numbers between will be used by gutters.\r\n            this.displayedAreas.forEach((area, i) => {\r\n                area.order = i * 2;\r\n                area.component.setStyleOrder(area.order);\r\n            });\r\n\r\n        }\r\n\r\n        // Â¤ AREAS SIZE PERCENT\r\n        \r\n        if(resetSizes === true) {\r\n\r\n            const totalUserSize = <number> this.displayedAreas.reduce((total: number, s: IArea) => s.component.size ? total + s.component.size : total, 0);\r\n            \r\n            // If user provided 'size' for each area and total == 1, use it.\r\n            if(this.displayedAreas.every(a => a.component.size !== null) && isValidTotalSize(totalUserSize) ) {\r\n\r\n                this.displayedAreas.forEach(area => {\r\n                    area.size = <number> area.component.size;\r\n                });\r\n            }\r\n            // Else set equal sizes for all areas.\r\n            else {\r\n                const size = 1 / this.displayedAreas.length;\r\n                \r\n                this.displayedAreas.forEach(area => {\r\n                    area.size = size;\r\n                });\r\n            }\r\n        }\r\n        \r\n        // Â¤ \r\n        // If some real area sizes are less than gutterSize, \r\n        // set them to zero and dispatch size to others.\r\n\r\n        let percentToDispatch = 0;\r\n        \r\n        // Get container pixel size\r\n        const containerSizePixel = getPixelSize(this.elRef, this.direction);\r\n\r\n        this.displayedAreas.forEach(area => {\r\n            if(area.size * containerSizePixel < this.gutterSize) {\r\n                percentToDispatch += area.size;\r\n                area.size = 0;\r\n            }\r\n        });\r\n        \r\n        if(percentToDispatch > 0 && this.displayedAreas.length > 0) {\r\n            const nbAreasNotZero = this.displayedAreas.filter(a => a.size !== 0).length;\r\n\r\n            if(nbAreasNotZero > 0) {\r\n                const percentToAdd = percentToDispatch / nbAreasNotZero;\r\n    \r\n                this.displayedAreas.filter(a => a.size !== 0).forEach(area => {\r\n                    area.size += percentToAdd;\r\n                });\r\n            }\r\n            // All area sizes (container percentage) are less than guterSize,\r\n            // It means containerSize < ngGutters * gutterSize\r\n            else {\r\n                this.displayedAreas[this.displayedAreas.length - 1].size = 1;\r\n            }\r\n        }\r\n\r\n        this.refreshStyleSizes();\r\n        this.cdRef.markForCheck();\r\n    }\r\n\r\n    private refreshStyleSizes(): void {\r\n        const sumGutterSize = this.getNbGutters() * this.gutterSize;\r\n\r\n        this.displayedAreas.forEach(area => {\r\n            area.component.setStyleFlexbasis(`calc( ${ area.size * 100 }% - ${ area.size * sumGutterSize }px )`);\r\n        });\r\n    }\r\n\r\n    public clickGutter(event: MouseEvent, gutterNum: number): void {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        if(this.startPoint && this.startPoint.x === event.clientX && this.startPoint.y === event.clientY) {\r\n            this.currentGutterNum = gutterNum;\r\n\r\n            this.notify('click');\r\n        }\r\n    }\r\n\r\n    public startDragging(event: MouseEvent | TouchEvent, gutterOrder: number, gutterNum: number): void {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        this.startPoint = getPointFromEvent(event);\r\n        if(!this.startPoint || this.disabled) {\r\n            return;\r\n        }\r\n\r\n        const areaA = this.displayedAreas.find(a => a.order === gutterOrder - 1);\r\n        const areaB = this.displayedAreas.find(a => a.order === gutterOrder + 1);\r\n        \r\n        if(!areaA || !areaB) {\r\n            return;\r\n        }\r\n\r\n        this.dragStartValues.sizePixelContainer = getPixelSize(this.elRef, this.direction);\r\n        this.dragStartValues.sizePixelA = getPixelSize(areaA.component.elRef, this.direction);\r\n        this.dragStartValues.sizePixelB = getPixelSize(areaB.component.elRef, this.direction);\r\n        this.dragStartValues.sizePercentA = areaA.size;\r\n        this.dragStartValues.sizePercentB = areaB.size;\r\n        this.currentGutterNum = gutterNum;\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.dragListeners.push( this.renderer.listen('document', 'mouseup', this.stopDragging.bind(this)) );\r\n            this.dragListeners.push( this.renderer.listen('document', 'touchend', this.stopDragging.bind(this)) );\r\n            this.dragListeners.push( this.renderer.listen('document', 'touchcancel', this.stopDragging.bind(this)) );\r\n            \r\n            this.dragListeners.push( this.renderer.listen('document', 'mousemove', (e: MouseEvent) => this.dragEvent(e, areaA, areaB)) );\r\n            this.dragListeners.push( this.renderer.listen('document', 'touchmove', (e: TouchEvent) => this.dragEvent(e, areaA, areaB)) );\r\n        });\r\n\r\n        areaA.component.lockEvents();\r\n        areaB.component.lockEvents();\r\n\r\n        this.isDragging = true;\r\n        this.renderer.addClass(this.elRef.nativeElement, 'is-dragging');\r\n        this.renderer.addClass(this.gutterEls.toArray()[this.currentGutterNum-1].nativeElement, 'is-dragged');\r\n        \r\n        this.notify('start');\r\n    }\r\n\r\n    private dragEvent(event: MouseEvent | TouchEvent, areaA: IArea, areaB: IArea): void {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        if(!this.isDragging) {\r\n            return;\r\n        }\r\n\r\n        this.endPoint = getPointFromEvent(event);\r\n        if(!this.endPoint) {\r\n            return;\r\n        }\r\n        \r\n        // Â¤ AREAS SIZE PIXEL\r\n\r\n        let offsetPixel = (this.direction === 'horizontal') ? (this.startPoint.x - this.endPoint.x) : (this.startPoint.y - this.endPoint.y);\r\n        if(this.dir === 'rtl') {\r\n            offsetPixel = -offsetPixel;\r\n        }\r\n\r\n        let newSizePixelA = this.dragStartValues.sizePixelA - offsetPixel;\r\n        let newSizePixelB = this.dragStartValues.sizePixelB + offsetPixel;\r\n        \r\n        if(newSizePixelA < this.gutterSize && newSizePixelB < this.gutterSize) {\r\n            // WTF.. get out of here!\r\n            return;\r\n        }\r\n        else if(newSizePixelA < this.gutterSize) {\r\n            newSizePixelB += newSizePixelA;\r\n            newSizePixelA = 0;\r\n        }\r\n        else if(newSizePixelB < this.gutterSize) {\r\n            newSizePixelA += newSizePixelB;\r\n            newSizePixelB = 0;\r\n        }\r\n\r\n        // Â¤ AREAS SIZE PERCENT\r\n\r\n        if(newSizePixelA === 0) {\r\n            areaB.size += areaA.size;\r\n            areaA.size = 0;\r\n        }\r\n        else if(newSizePixelB === 0) {\r\n            areaA.size += areaB.size;\r\n            areaB.size = 0;\r\n        }\r\n        else {\r\n            // NEW_PERCENT = START_PERCENT / START_PIXEL * NEW_PIXEL;\r\n            if(this.dragStartValues.sizePercentA === 0) {\r\n                areaB.size = this.dragStartValues.sizePercentB / this.dragStartValues.sizePixelB * newSizePixelB;\r\n                areaA.size = this.dragStartValues.sizePercentB - areaB.size;\r\n            }\r\n            else if(this.dragStartValues.sizePercentB === 0) {\r\n                areaA.size = this.dragStartValues.sizePercentA / this.dragStartValues.sizePixelA * newSizePixelA;\r\n                areaB.size = this.dragStartValues.sizePercentA - areaA.size;\r\n            }\r\n            else {\r\n                areaA.size = this.dragStartValues.sizePercentA / this.dragStartValues.sizePixelA * newSizePixelA;\r\n                areaB.size = (this.dragStartValues.sizePercentA + this.dragStartValues.sizePercentB) - areaA.size;\r\n            }\r\n        }\r\n\r\n        this.refreshStyleSizes();\r\n        \r\n        // If moved from starting point, notify progress\r\n        if(this.startPoint.x !== this.endPoint.x || this.startPoint.y !== this.endPoint.y) {\r\n            this.notify('progress');\r\n        }\r\n    }\r\n\r\n    private stopDragging(event?: Event): void {\r\n        if(event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        \r\n        if(this.isDragging === false) {\r\n            return;\r\n        }\r\n        \r\n        this.displayedAreas.forEach(area => {\r\n            area.component.unlockEvents();\r\n        });\r\n        \r\n        while(this.dragListeners.length > 0) {\r\n            const fct = this.dragListeners.pop();\r\n            if(fct) {\r\n                fct();\r\n            }\r\n        }\r\n        \r\n        // If moved from starting point, notify end\r\n        if(event && this.endPoint && (this.startPoint.x !== this.endPoint.x || this.startPoint.y !== this.endPoint.y)) {\r\n            this.notify('end');\r\n        }\r\n        \r\n        this.isDragging = false;\r\n        this.renderer.removeClass(this.elRef.nativeElement, 'is-dragging');\r\n        this.renderer.removeClass(this.gutterEls.toArray()[this.currentGutterNum-1].nativeElement, 'is-dragged');\r\n\r\n        // Needed to let (click)=\"clickGutter(...)\" event run and verify if mouse moved or not\r\n        this.ngZone.runOutsideAngular(() => {\r\n            setTimeout(() => {\r\n                this.startPoint = null;\r\n                this.endPoint = null;\r\n            })\r\n        });\r\n    }\r\n\r\n    public notify(type: 'start' | 'progress' | 'end' | 'click' | 'transitionEnd'): void {\r\n        const sizes: Array<number> = this.displayedAreas.map(a => a.size * 100);\r\n\r\n        if(type === 'start') {\r\n            if(this.dragStartSubscriber) {\r\n                this.ngZone.run(() => this.dragStartSubscriber.next({gutterNum: this.currentGutterNum, sizes}));\r\n            }\r\n        }\r\n        else if(type === 'end') {\r\n            if(this.dragEndSubscriber) {\r\n                this.ngZone.run(() => this.dragEndSubscriber.next({gutterNum: this.currentGutterNum, sizes}));\r\n            }\r\n        }\r\n        else if(type === 'click') {\r\n            if(this.gutterClickSubscriber) {\r\n                this.ngZone.run(() => this.gutterClickSubscriber.next({gutterNum: this.currentGutterNum, sizes}));\r\n            }\r\n        }\r\n        else if(type === 'transitionEnd') {\r\n            if(this.transitionEndSubscriber) {\r\n                this.ngZone.run(() => this.transitionEndSubscriber.next(sizes));\r\n            }\r\n        }\r\n        else if(type === 'progress') {\r\n            // Stay outside zone to allow users do what they want about change detection mechanism.\r\n            this.dragProgressSubject.next({gutterNum: this.currentGutterNum, sizes});\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.stopDragging();\r\n    }\r\n}\r\n","import { Directive, Input, ElementRef, Renderer2, OnInit, OnDestroy, NgZone } from '@angular/core';\r\n\r\nimport { SplitComponent } from '../component/split.component';\r\nimport { getInputBoolean } from '../utils';\r\n\r\n@Directive({\r\n    selector: 'as-split-area, [as-split-area]'\r\n})\r\nexport class SplitAreaDirective implements OnInit, OnDestroy {\r\n\r\n    private _order: number | null = null;\r\n\r\n    @Input() set order(v: number | null) {\r\n        v = Number(v);\r\n        this._order = !isNaN(v) ? v : null;\r\n\r\n        this.split.updateArea(this, true, false);\r\n    }\r\n    \r\n    get order(): number | null {\r\n        return this._order;\r\n    }\r\n\r\n    ////\r\n\r\n    private _size: number | null = null;\r\n\r\n    @Input() set size(v: number | null) {\r\n        v = Number(v);\r\n        this._size = (!isNaN(v) && v >= 0 && v <= 100) ? (v/100) : null;\r\n\r\n        this.split.updateArea(this, false, true);\r\n    }\r\n    \r\n    get size(): number | null {\r\n        return this._size;\r\n    }\r\n\r\n    ////\r\n\r\n    private _visible: boolean = true;\r\n\r\n    @Input() set visible(v: boolean) {\r\n        this._visible = getInputBoolean(v);\r\n\r\n        if(this._visible) { \r\n            this.split.showArea(this);\r\n            this.renderer.removeClass(this.elRef.nativeElement, 'is-hided');\r\n        }\r\n        else {\r\n            this.split.hideArea(this);\r\n            this.renderer.addClass(this.elRef.nativeElement, 'is-hided');\r\n        }\r\n    }\r\n\r\n    get visible(): boolean {\r\n        return this._visible;\r\n    }\r\n\r\n    ////\r\n\r\n    private transitionListener: Function;\r\n    private readonly lockListeners: Array<Function> = [];\r\n\r\n    constructor(private ngZone: NgZone,\r\n                public elRef: ElementRef,\r\n                private renderer: Renderer2,\r\n                private split: SplitComponent) {\r\n        this.renderer.addClass(this.elRef.nativeElement, 'as-split-area');\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.split.addArea(this);\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.transitionListener = this.renderer.listen(this.elRef.nativeElement, 'transitionend', (event: TransitionEvent) => {\r\n                // Limit only flex-basis transition to trigger the event\r\n                if(event.propertyName === 'flex-basis') {\r\n                    this.split.notify('transitionEnd');\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    public setStyleOrder(value: number): void {\r\n        this.renderer.setStyle(this.elRef.nativeElement, 'order', value);\r\n    }\r\n    \r\n    public setStyleFlexbasis(value: string): void {\r\n        this.renderer.setStyle(this.elRef.nativeElement, 'flex-basis', value);\r\n    }\r\n    \r\n    public lockEvents(): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.lockListeners.push( this.renderer.listen(this.elRef.nativeElement, 'selectstart', (e: Event) => false) );\r\n            this.lockListeners.push( this.renderer.listen(this.elRef.nativeElement, 'dragstart', (e: Event) => false) );\r\n        });\r\n    }\r\n\r\n    public unlockEvents(): void {\r\n        while(this.lockListeners.length > 0) {\r\n            const fct = this.lockListeners.pop();\r\n            if(fct) {\r\n                fct();\r\n            }\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.unlockEvents();\r\n\r\n        if(this.transitionListener) {\r\n            this.transitionListener();\r\n        }\r\n\r\n        this.split.removeArea(this);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { EventManager } from '@angular/platform-browser';\r\n\r\n/**\r\n * Credit to Michael Strobel from:\r\n * https://github.com/kryops/ng2-events\r\n */\r\n@Injectable()\r\nexport class UndetectedEventPlugin {\r\n    manager: EventManager;\r\n\r\n    supports(eventName: string): boolean {\r\n        return eventName.indexOf('as-split-undetected.') === 0;\r\n    }\r\n\r\n    addEventListener(element: HTMLElement, eventName: string, handler: Function): Function {\r\n        const realEventName = eventName.slice(20);\r\n\r\n        return this.manager.getZone().runOutsideAngular(() => this.manager.addEventListener(element, realEventName, handler));\r\n    }\r\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EVENT_MANAGER_PLUGINS } from '@angular/platform-browser';\r\n\r\nimport { SplitComponent } from './component/split.component';\r\nimport { SplitAreaDirective } from './directive/splitArea.directive';\r\nimport { UndetectedEventPlugin } from \"./service/UndetectedEventPlugin\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        SplitComponent,\r\n        SplitAreaDirective,\r\n    ],\r\n    exports: [\r\n        SplitComponent,\r\n        SplitAreaDirective,\r\n    ]\r\n})\r\nexport class AngularSplitModule {\r\n\r\n    public static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: AngularSplitModule,\r\n            providers: [{\r\n                provide: EVENT_MANAGER_PLUGINS,\r\n                useClass: UndetectedEventPlugin,\r\n                multi: true\r\n            }]\r\n        };\r\n    }\r\n\r\n    public static forChild(): ModuleWithProviders {\r\n        return {\r\n            ngModule: AngularSplitModule,\r\n            providers: []\r\n        };\r\n    }\r\n\r\n}\r\n"]}