import { OnDestroy, EventEmitter, OnInit, ChangeDetectorRef, AfterViewInit, OnChanges, SimpleChanges, NgZone } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { ScriptService } from './script.service';
import { UEditorConfig } from './ueditor.config';
export declare type EventTypes = 'destroy' | 'reset' | 'focus' | 'langReady' | 'beforeExecCommand' | 'afterExecCommand' | 'firstBeforeExecCommand' | 'beforeGetContent' | 'afterGetContent' | 'getAllHtml' | 'beforeSetContent' | 'afterSetContent' | 'selectionchange' | 'beforeSelectionChange' | 'afterSelectionChange';
export declare class UEditorComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy, ControlValueAccessor {
    private ss;
    private cog;
    private cd;
    private zone;
    private instance;
    private value;
    private inited;
    private events;
    private onChange;
    private onTouched;
    loading: boolean;
    id: string;
    config: any;
    loadingTip: string;
    disabled: boolean;
    private _disabled;
    /** 延迟初始化 */
    delay: number;
    readonly onPreReady: EventEmitter<UEditorComponent>;
    readonly onReady: EventEmitter<UEditorComponent>;
    readonly onDestroy: EventEmitter<{}>;
    constructor(ss: ScriptService, cog: UEditorConfig, cd: ChangeDetectorRef, zone: NgZone);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private initDelay;
    private init;
    private destroy;
    private setDisabled;
    /**
     * 获取UE实例
     *
     * @readonly
     */
    readonly Instance: any;
    /**
     * 设置编辑器语言
     */
    setLanguage(lang: 'zh-cn' | 'en'): void;
    /**
     * 添加编辑器事件
     */
    addListener(eventName: EventTypes, fn: Function): void;
    /**
     * 移除编辑器事件
     */
    removeListener(eventName: EventTypes): void;
    ngOnDestroy(): void;
    _onReuseInit(): void;
    writeValue(value: string): void;
    registerOnChange(fn: (_: any) => {}): void;
    registerOnTouched(fn: () => {}): void;
    setDisabledState(isDisabled: boolean): void;
}
